<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-lazy-init="true" default-autowire="byName" default-init-method="init" default-destroy-method="destroy">

	<bean id="webFilterExecutorScanner" class="com.inx.aspect.impl.BaseAnnotationService">
		<property name="packagesToScan" value="com.inx.ias" />
		<property name="classScanner">
			<bean class="com.inx.aspect.impl.SimpleAnnotationScanner">
				<property name="annotationClass" value="com.inx.web.servlet.filter.annotation.WebFilterExecutor" />
			</bean>
		</property>
	</bean>

	<bean id="contextPathByPassChecker" class="com.inx.ias.sso.filter.impl.BaseContextPathByPassChecker">
		<property name="byPassContextPaths">
			<list>
				<!-- <value>${sso.globalByPassChecker}</value> -->
				<value>/resources/images/*</value>
				<!-- <value>/index.html</value> -->
				<!-- <value>/index</value> -->
				<!-- <value>/index.do</value> -->
				<value>/logout</value>
				<value>/favicon.ico</value>
				<value>/css*</value>
				<value>/view/assets/*</value>
			</list>
		</property>
	</bean>

	<bean id="baseHttpExecutor" class="com.inx.web.http.impl.BaseHttpExecutor">
		<property name="requestTimeout" value="10" />
	</bean>

	<bean id="haPageManager" class="com.inx.ias.sso.filter.impl.IasHaPageManager">
		<property name="httpExecutors">
			<map>
				<entry key="normalHttpExecutor" value-ref="baseHttpExecutor" />
				<entry key="adHttpExecutor">
					<bean class="com.inx.web.http.impl.BaseAdHttpExecutor">
						<property name="requestTimeout" value="5" />
						<property name="redirectsEnabled" value="false" />
						<property name="adAccount" value="public.sam" />
						<property name="adPassword" value="kAae5K9W" />
						<property name="adDomain" value="CMINL" />
					</bean>
				</entry>
			</map>
		</property>
		<property name="haUrlDestinations">
			<map>
				<entry key="ssoLogin">
					<map>
						<entry key="${sso.login1}" value="normalHttpExecutor" />
						<entry key="${sso.login2}" value="normalHttpExecutor" />
					</map>
				</entry>
				<entry key="ssoAdLogin">
					<map>
						<entry key="${sso.login.ad1}" value="adHttpExecutor" />
						<entry key="${sso.login.ad2}" value="adHttpExecutor" />
					</map>
				</entry>
				<entry key="ssoLogout">
					<map>
						<entry key="${sso.logout1}" value="normalHttpExecutor" />
						<entry key="${sso.logout2}" value="normalHttpExecutor" />
					</map>
				</entry>
				<entry key="ssoError">
					<map>
						<entry key="${sso.error1}" value="normalHttpExecutor" />
						<entry key="${sso.error2}" value="normalHttpExecutor" />
					</map>
				</entry>
				<entry key="verifyTicket">
					<map>
						<entry key="${sso.verifyTicket1}" value="normalHttpExecutor" />
						<entry key="${sso.verifyTicket2}" value="normalHttpExecutor" />
					</map>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="ticketHooker" class="com.inx.ias.sso.filter.impl.BaseTicketHooker">
		<property name="haPageManager" ref="haPageManager" />
		<property name="stringHttpExecutor">
			<bean class="com.inx.web.http.impl.BaseStringHttpExecutor">
				<constructor-arg index="0" ref="baseHttpExecutor" />
				<property name="maxContentLength" value="1000" />
			</bean>
		</property>
	</bean>

	<bean id="ticketVerifier" class="com.inx.ias.sso.filter.impl.BaseTicketVerifier">
		<property name="ignoreExpiredTicket" value="${sso.ignoreExpiredTicket}" />
	</bean>

	<bean id="pageDispatcher" class="com.inx.ias.sso.filter.impl.BasePageDispatcher">
		<property name="haPageManager" ref="haPageManager" />
	</bean>
	
	<bean id="urlPattern" class="com.inx.web.servlet.util.impl.KeyValueUrlPattern">
		<!-- if url contains "key",  redirect to "value" page with "url=xxx" parameter & remove cookie -->
		<property name="keyValueMap">
			<map>
				<entry key="ssologout" value="ssoLogout" />
			</map>
		</property>
	</bean>

</beans>
